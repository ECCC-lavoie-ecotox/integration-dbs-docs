{
  "hash": "37241ece99e2eeb307c0c6e75bf8592b",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Établir une liste des projets en se basant sur les rapports de laboratoire\"\nauthor: \"Steve Vissault\"\ndate: \"2024-03-19\"\n---\n\n\n## Établir une liste exhaustive des rapports de laboratoire\n\nPourquoi? Chaque rapport contient sur sa page de garde l'ensemble des métadonnées en lien avec le projet de recherche pour lequel l'analyse a été demandé.\n\nUn rapport de laboratoire peut être detectable dans une liste de fichier par la structure de son identifiant unique. Voici un exemple d'identifiant unique: `CHEM-PCDD-00-07` ou encore `MB-05-10`. Ces identifiants ont une structure unique que l'on peut detecter grace à l'expression régulière suivante:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nregex_report_id <- \"([A-Za-z]{2,5}-)?[A-Za-z]{2,5}-\\\\d{2}-\\\\d{2}\"\n```\n:::\n\n\nCette expression régulière sera utilisée plusieurs fois dans ce document. \n\nOn liste les rapports de laboratoire présents dans le dossier `03-Labo/Results Reports`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nreports_path <- list.files(\n    \"C:/Users/VissaultS/Documents/03-Labo/Results Reports\", \n    pattern = \"*.pdf|*.docx|*.doc\", recursive = TRUE, full.names = TRUE\n)\n\n# On extrait les identifiants des rapports du nom du fichier\nreport_id <- stringr::str_extract(reports_path, regex_report_id)\n\n# On obtient la signature du fichier, ca va être pratique pour detecter les fichiers dupliqués même si le nom du fichier est différent.\nfile_hash <- tools::md5sum(reports_path)\n\n# On extrait l'extension du fichier\nfile_ext <- reports_path |> \n    strsplit(\"[.]\") |> \n    purrr::map_chr(\\(e) return(e[2]))\n\n# On compose un tableau avec l'ensemble de ces informations\nreports <- data.frame(\n        path = reports_path, \n        id = report_id, \n        hash = file_hash, \n        ext = file_ext\n    ) |> tibble::as_tibble()\n```\n:::\n\n\nNote: `tools::md5sum` permet de générer une signature unique propre au fichier. Ainsi deux fichiers identiques dans le contenu mais avec des noms différents pourront être identifié comme des duplicats.\n\nVoici la liste des fichiers identiques dans le dossier `03-Labo/Results Reports`.\n\n\n\n```{.r .cell-code}\nreports_dup <- reports |> \n    tibble::as_tibble() |>\n    janitor::get_dupes(-c(path)) |>\n    dplyr::select(-hash)\n\nreports_dup |> knitr::kable()\n```\n\n\n\n|id            |ext | dupe_count|path                                                                                                                                         |\n|:-------------|:---|----------:|:--------------------------------------------------------------------------------------------------------------------------------------------|\n|BMK-PFC-23-10 |pdf |          3|C:/Users/VissaultS/Documents/03-Labo/Results Reports/BMK-PFC-23-10_HERG-COEI_eggs2023.pdf                                                    |\n|BMK-PFC-23-10 |pdf |          3|C:/Users/VissaultS/Documents/03-Labo/Results Reports/EideràDuvet Rapports 1972-2023/BMK-PFC-23-10_HERG-COEI_eggs2023.pdf                     |\n|BMK-PFC-23-10 |pdf |          3|C:/Users/VissaultS/Documents/03-Labo/Results Reports/GoelandArgente 2017, 2022-23/BMK-PFC-23-10_HERG-COEI_eggs2023.pdf                       |\n|CHEM-OC-22-10 |pdf |          3|C:/Users/VissaultS/Documents/03-Labo/Results Reports/CHEM-OC-22-10_GBHE-HERG2022.pdf                                                         |\n|CHEM-OC-22-10 |pdf |          3|C:/Users/VissaultS/Documents/03-Labo/Results Reports/GoelandArgente 2017, 2022-23/CHEM-OC-22-10_GBHE-HERG2022.pdf                            |\n|CHEM-OC-22-10 |pdf |          3|C:/Users/VissaultS/Documents/03-Labo/Results Reports/GrandHeron Rapports xxxx-2022/Rapports/CHEM-OC-22-10_GBHE-HERG2022.pdf                  |\n|MET-THg-22-05 |pdf |          3|C:/Users/VissaultS/Documents/03-Labo/Results Reports/GoelandArgente 2017, 2022-23/MET-THg-22-05 - RALA01-2022_HERG-GBHEegg2022.pdf           |\n|MET-THg-22-05 |pdf |          3|C:/Users/VissaultS/Documents/03-Labo/Results Reports/GrandHeron Rapports xxxx-2022/Rapports/MET-THg-22-05 - RALA01-2022_HERG-GBHEegg2022.pdf |\n|MET-THg-22-05 |pdf |          3|C:/Users/VissaultS/Documents/03-Labo/Results Reports/MET-THg-22-05 - RALA01-2022_HERG-GBHEegg2022.pdf                                        |\n|MET-THg-23-13 |pdf |          3|C:/Users/VissaultS/Documents/03-Labo/Results Reports/EideràDuvet Rapports 1972-2023/MET-THg-23-13 - RALA01-2023.pdf                          |\n|MET-THg-23-13 |pdf |          3|C:/Users/VissaultS/Documents/03-Labo/Results Reports/GoelandArgente 2017, 2022-23/MET-THg-23-13 - RALA01-2023.pdf                            |\n|MET-THg-23-13 |pdf |          3|C:/Users/VissaultS/Documents/03-Labo/Results Reports/MET-THg-23-13 - RALA01-2023_OeufsCOEI-HERG2023.pdf                                      |\n|TP-SI-22-09   |pdf |          3|C:/Users/VissaultS/Documents/03-Labo/Results Reports/GoelandArgente 2017, 2022-23/TP-SI-22-09C_RALA01-2022_HERG-GBHEeggs2022.pdf             |\n|TP-SI-22-09   |pdf |          3|C:/Users/VissaultS/Documents/03-Labo/Results Reports/GrandHeron Rapports xxxx-2022/Rapports/TP-SI-22-09C_RALA01-2022_HERG-GBHEeggs2022.pdf   |\n|TP-SI-22-09   |pdf |          3|C:/Users/VissaultS/Documents/03-Labo/Results Reports/TP-SI-22-09C_RALA01-2022_HERG-GBHEeggs2022.pdf                                          |\n|CHEM-OC-21-08 |pdf |          2|C:/Users/VissaultS/Documents/03-Labo/Results Reports/CHEM-OC-21-08R.pdf                                                                      |\n|CHEM-OC-21-08 |pdf |          2|C:/Users/VissaultS/Documents/03-Labo/Results Reports/FouBassan Rapports 1984-2019/CHEM-OC-21-08R.pdf                                         |\n|CHEM-OC-22-05 |pdf |          2|C:/Users/VissaultS/Documents/03-Labo/Results Reports/CHEM-OC-22-05_HERGDeslauriers.pdf                                                       |\n|CHEM-OC-22-05 |pdf |          2|C:/Users/VissaultS/Documents/03-Labo/Results Reports/GoelandArgente 2017, 2022-23/CHEM-OC-22-05_HERGDeslauriers.pdf                          |\n|CHEM-OC-23-08 |pdf |          2|C:/Users/VissaultS/Documents/03-Labo/Results Reports/CHEM-OC-23-08_EggHERG_COEI_2023.pdf                                                     |\n|CHEM-OC-23-08 |pdf |          2|C:/Users/VissaultS/Documents/03-Labo/Results Reports/EideràDuvet Rapports 1972-2023/CHEM-OC-23-08_EggHERG_COEI_2023.pdf                      |\n|MET-THg-21-03 |pdf |          2|C:/Users/VissaultS/Documents/03-Labo/Results Reports/FouBassan Rapports 1984-2019/MET-THg-21-03.pdf                                          |\n|MET-THg-21-03 |pdf |          2|C:/Users/VissaultS/Documents/03-Labo/Results Reports/MET-THg-21-03 - RALA01-2021_eggs.pdf                                                    |\n|TP-SI-21-05   |pdf |          2|C:/Users/VissaultS/Documents/03-Labo/Results Reports/FouBassan Rapports 1984-2019/TP-SI-21-05C.pdf                                           |\n|TP-SI-21-05   |pdf |          2|C:/Users/VissaultS/Documents/03-Labo/Results Reports/TP-SI-21-05C_RALA01-2021.pdf                                                            |\n\n\nOn selectionne le premier rapport en se basant sur le id (ex. BMK-PFC-23-01) pour éliminer les rapports dupliqués pour la suite de l'analyse. On s'assure de selectionner préférablement les pdfs si on dispose d'un docx et d'un document pdf pour le même identifiant de rapport de laboratoire.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nreports <- reports |> \n    # On retire les rapports qui sont dupliqués\n    dplyr::group_by(hash) |>\n    dplyr::slice(1) |>\n    dplyr::ungroup() |>\n    # Si plusieurs extension de fichiers, on selectionne ceux en PDF préférablement, sinon .docx, sinon .doc en dernier recours.\n    dplyr::group_split(id) |>\n    purrr::map(\\(g){\n        g |> dplyr::arrange(factor(ext, levels = c('pdf', 'docx', 'doc'))) |>\n        dplyr::slice(1)\n    }) |>\n    dplyr::bind_rows()\n```\n:::\n\n\nQuelques rapports de laboratoire demeurent au format doc et docx.\n\n\n\n```{.r .cell-code}\ndocs <- reports |> dplyr::filter(ext %in% c('doc', 'docx')) \ndocs |> knitr::kable()\n```\n\n\n\n|path |id |hash |ext |\n|:----|:--|:----|:---|\n\n\nAfin de faciliter l'extraction des métadonnées, on convertit les fichiers .doc et .docx en pdf\n\n## Convertion des documents Word en pdf\n\nCette étape a été compété manuellement.\n\n## Extraire les métadonnées du rapport\n\nNous souhaitons générer une liste de tous les projets basée sur les 4 rapports de laboratoire stockés dans le dossier `03-Labo/Comptes rendus` de résultats. La première page de chaque rapport de laboratoire contient toutes les informations pertinentes pour produire cette liste.\n\nPour chaque rapport, nous vérifions s'il s'agit d'une image ou non. Si le rapport est une image, nous devons utiliser une reconnaissance optique de caractères (OCR) afin d'extraire le texte de la première page et d'obtenir toutes les métadonnées pertinentes. Si c'est un pdf ou un fichier word, nous importons la première page du document.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nreports <- reports |> dplyr::mutate(\n    filename = basename(path),\n    is_image = purrr::map2_lgl(path, ext, \\(p, e) {\n        if(e == \"pdf\"){\n            out <- pdftools::pdf_text(p)\n            !all(nchar(out) > 15)\n        } else {\n            FALSE\n        }\n    })\n)\n\nfrontpages <- purrr::map2_vec(reports$path, reports$is_image, \\(p, i) {\n        ifelse(isTRUE(i), \n            pdftools::pdf_ocr_text(pdf = p, pages = 1),\n            pdftools::pdf_text(pdf = p)[[1]]\n        )\n    }) |> tolower()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nproject_id <- purrr::map_vec(frontpages, \\(f){\n    stringr::str_extract(f, \"(?<=(project: |project |projects|projet :)).*(?=\\n)\")\n}) |> \n    toupper() |> \n    stringr::word(1) |> \n    stringr::str_replace_all(\"[.,]\", \"\") |>\n    stringr::str_trim() |>\n    dplyr::na_if(\"\")\n\nproject_leader <- purrr::map_vec(frontpages, \\(f){\n        stringr::str_extract(f, \"(?<=(project leader: |project leader |project manager: |manager: |study leader: |nom du requérant :)).*(?=\\n)\")\n    }) |> \n    stringr::str_replace_all(c(\"[_|:]\" = \"\", \"[:digit:]\" = \"\", \"[.]$\" = \"\")) |> \n    stringr::str_to_title() |>\n    stringr::str_trim()\n\nproject_dates <- frontpages |>\n    purrr::map_vec(\\(f){\n        dates <- stringr::str_extract(f, \"\\\\d{4}-\\\\d{2}-\\\\d{2}\")\n        if(is.na(dates)) {\n            dates <- stringr::str_extract(f, \"(?<=(date: )).*(?=\\n)\")\n        }\n        return(dates)\n    }) \n        \nreportsProject <- data.frame(\n    report_id = reports$id, \n    report_access_path = stringr::str_replace_all(reports$path, \"C:/Users/VissaultS/Documents\", \"Z:\"), \n    project_id, project_leader, project_dates, project_title = NA\n)\n```\n:::\n\n\nLe data.frame `reportsProject` est à la base du fichier \"Z:\\07-Données BD\\BD_projects\\projects_list_extract_25032024.xlsx\".\n\n## Valider l'existence de rapports de laboratoire dans le dossier `01-Projet et suivis`\n\nOn valide si certains de ces rapports ne se retrouvent pas dans le dossier `03-Labo/Comptes rendus`. Ces rapports pourraient potentiellement nous interressés.\n\n\n::: {.cell result='asis'}\n\n```{.r .cell-code}\nfiles <- list.files(\n    \"C:/Users/VissaultS/Documents/01-Projets et suivis\", \n    pattern = \"*.pdf|*.docx|*.doc\", recursive = TRUE, full.names = TRUE\n)\n\npotential_reports <- data.frame(file = files[which(stringr::str_detect(files, regex_report_id))])\n\npotential_reports <- potential_reports |> dplyr::mutate(\n    id = stringr::str_extract(file, regex_report_id) |> toupper(),\n    in_lab_report_folder = !(id %in% reports$id)\n) |> dplyr::arrange(in_lab_report_folder) |>\n    dplyr::mutate(file = stringr::str_replace(file, \"C:/Users/VissaultS/Documents/\", \"Z:\"))\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}